var textAlignments = ["left", "right", "center", "justify"]

var onRun = function(context) {

  var documentName = context.document.displayName();

  var selectedLayers = context.selection;
  var selectedCount = selectedLayers.count();

  if (selectedCount == 0) {
    log('No layers are selected.');
  }

  var str = ""

  for (var i=0; i<selectedCount; i++) {
    var propertiesDict = {
    }
    currentLayer = selectedLayers[i]
    var l = [selectedLayers objectAtIndex:0]
    // var shape = l.layers().firstObject();
    var n = currentLayer.name()
    var ns = [NSString stringWithString:n]
    var cleanName = [ns stringByReplacingOccurrencesOfString: " " withString:"_"]

    var cn = NSStringFromClass([l class])
    log(cn)

    // propertiesDict.style = currentLayer.CSSAttributeString()

    // log([shape cornerRadiusFloat])
    // log(l.layers().firstObject())


    propertiesDict.name = "\"" + currentLayer.name() + "\""
    // get size
    var frame = currentLayer.frame()
    propertiesDict.width = frame.width()
    propertiesDict.height = frame.height()

    propertiesDict.x = frame.x()
    propertiesDict.y = frame.y()

    var styleDict = {}

    // handle which type of layer it is
    if (cn == "MSTextLayer") {
      propertiesDict.backgroundColor = wrapInQuotes("transparent")
      propertiesDict.html = wrapInQuotes([currentLayer stringValue])
      styleDict.fontFamily = wrapInQuotes([currentLayer fontPostscriptName])
      var color = [currentLayer textColor]
      var hex = color.hexValue()
      styleDict.color = wrapInQuotes("#" + hex)
      var fontSize = [currentLayer fontSize]
      styleDict.fontSize = wrapInQuotes(fontSize + "px")
      var textAlignment = [currentLayer textAlignment]
      styleDict.textAlign = wrapInQuotes(textAlignments[textAlignment])
    } else if (cn == "MSShapeGroup"){
      log("handle shit")

      // propertiesDict.borderRadius = br.replace("px;", "")
    }

    propertiesDict.style = styleDict
    str += makeFramerLayerString(cleanName, propertiesDict)
    setClipboard(str)


}

function wrapInQuotes(str) {
  return "\"" + str + "\""
}

function makeFramerLayerString(name, dict) {
  var layerString = ""

  layerString += name + " = new Layer"
  var dictionary = [NSDictionary dictionaryWithDictionary: dict]
  layerString+= "\n"
  for(var k in dictionary)


    if (k == "style") {
      s = dictionary[k]
      layerString+= "\t" + k + ":\n"
      for(var m in s) {
        layerString+= "\t\t" + m + ": " + s[m] + "\n"
      }
    }
    else {
      layerString+= "\t" + k + ": " + dictionary[k] + "\n"
    }

  return layerString
}
function setClipboard(text) {
	pasteBoard = null;
	if(typeof text === 'undefined') return null;

	if(!this.pasteBoard) this.pasteBoard = NSPasteboard.generalPasteboard();

	this.pasteBoard.declareTypes_owner([NSPasteboardTypeString], null);
	this.pasteBoard.setString_forType(text, NSPasteboardTypeString);

	return true;
}

};
